/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthImport } from './routes/_auth'
import { Route as AuthAppIndexImport } from './routes/_auth/app/index'
import { Route as AuthAppAppSnippetsImport } from './routes/_auth/app/_app.snippets'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const AuthAppIndexRoute = AuthAppIndexImport.update({
  id: '/app/',
  path: '/app/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthAppAppSnippetsRoute = AuthAppAppSnippetsImport.update({
  id: '/app/_app/snippets',
  path: '/app/snippets',
  getParentRoute: () => AuthRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_auth/app/': {
      id: '/_auth/app/'
      path: '/app'
      fullPath: '/app'
      preLoaderRoute: typeof AuthAppIndexImport
      parentRoute: typeof AuthImport
    }
    '/_auth/app/_app/snippets': {
      id: '/_auth/app/_app/snippets'
      path: '/app/snippets'
      fullPath: '/app/snippets'
      preLoaderRoute: typeof AuthAppAppSnippetsImport
      parentRoute: typeof AuthImport
    }
  }
}

// Create and export the route tree

interface AuthRouteChildren {
  AuthAppIndexRoute: typeof AuthAppIndexRoute
  AuthAppAppSnippetsRoute: typeof AuthAppAppSnippetsRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthAppIndexRoute: AuthAppIndexRoute,
  AuthAppAppSnippetsRoute: AuthAppAppSnippetsRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '': typeof AuthRouteWithChildren
  '/app': typeof AuthAppIndexRoute
  '/app/snippets': typeof AuthAppAppSnippetsRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '': typeof AuthRouteWithChildren
  '/app': typeof AuthAppIndexRoute
  '/app/snippets': typeof AuthAppAppSnippetsRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/_auth': typeof AuthRouteWithChildren
  '/_auth/app/': typeof AuthAppIndexRoute
  '/_auth/app/_app/snippets': typeof AuthAppAppSnippetsRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '' | '/app' | '/app/snippets'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '' | '/app' | '/app/snippets'
  id: '__root__' | '/' | '/_auth' | '/_auth/app/' | '/_auth/app/_app/snippets'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  AuthRoute: typeof AuthRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  AuthRoute: AuthRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_auth"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/app/",
        "/_auth/app/_app/snippets"
      ]
    },
    "/_auth/app/": {
      "filePath": "_auth/app/index.tsx",
      "parent": "/_auth"
    },
    "/_auth/app/_app/snippets": {
      "filePath": "_auth/app/_app.snippets.tsx",
      "parent": "/_auth"
    }
  }
}
ROUTE_MANIFEST_END */
